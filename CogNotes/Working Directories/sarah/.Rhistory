plot(pressure)
x <- runif(50)
x <- runif(50)
x
head(x)
x <- runif(50, min = 2, max = 6)
x <- runif(50, min = 2, max = 6)
x <- runif(50, min = 2, max = 6)
head(x)
x <- runif(50, min = 2, max = 6)
x
?head()
head(x)
head(x,10)
head(x)
hist(x,col="steelblue")
hist(x,col="peachpuff3")
hist(x,col="peachpuff3")
```
hist(x,col="peachpuff3")
x <- rnorm(50)
hist(x, col = 'peachpuff3')
abline(v = mean(x), lty = 2, lwd = 2)
abline(v = mean(x), lty = 2, lwd = 2)
x <- rnorm(50, mean = 5, sd = 2)
hist(x, col = 'peachpuff3')
abline(v = mean(x), lty = 2, lwd = 2)
x <- rnorm(50, mean = 5, sd = 2)
hist(x, col = 'peachpuff3')
abline(v = mean(x), lty = 2, lwd = 2)
mean(x)
sd(x)
x <- rnorm(50, mean = 5, sd = 2)
hist(x, col = 'peachpuff3')
abline(v = mean(x), lty = 2, lwd = 2)
mean(x)
sd(x)
quantile(x)
quantile(x, 0.16)
#If the 68% rule of thumb works, the resulting numbers should be fairly close to the
#interval covered by M − SD and M + SD
quantile(x,32)
x <- rnorm(50, mean = 5, sd = 2)
hist(x, col = 'peachpuff3')
abline(v = mean(x), lty = 2, lwd = 2)
mean(x)
sd(x)
quantile(x)
quantile(x, 0.16)
#If the 68% rule of thumb works, the resulting numbers should be fairly close to the
#interval covered by M − SD and M + SD
quantile(x,32)
x <- rnorm(50, mean = 5, sd = 2)
hist(x, col = 'peachpuff3')
abline(v = mean(x), lty = 2, lwd = 2)
mean(x)
sd(x)
quantile(x)
quantile(x, 0.16)
#If the 68% rule of thumb works, the resulting numbers should be fairly close to the
#interval covered by M − SD and M + SD
quantile(x,0.32)
mean(x)-sd(x)
quantile(x,0.68)
mean(x)+sd(x)
hist(rnorm(n = 20))
hist(rnorm(n = 20))
```{r}
hist(rnorm(n = 20))
hist(rnorm(n = 20))
hist(rnorm(n = 20))
hist(rnorm(n = 20))
hist(rnorm(n = 1000))
hist(rnorm(n = 1000))
hist(rnorm(n = 1000))
```{r}
hist(rnorm(n = 1000))
hist(rnorm(n = 1000))
hist(rnorm(n = 1000))
hist(rnorm(n = 1000))
hist(rnorm(n = 1000))
hist(rnorm(n = 1000))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
hist(rnorm(n = 100))
source("CRANtoR_function.R")
install.packages('tidyverse')
install.packages('stringi')
install.packages('stringr')
library(tidyverse)
library(stringi)
library(stringr)
install.packages('tidyverse','stringi','stringr','anytime')
library(tidyverse,stringi,stringr,anytime)
install.packages("tidyverse", "stringi", "stringr", "anytime")
source("CRANtoR_function.R")
install.packages("pacman")
pacman::p_load(tidyverse,stringi,stringr,anytime)
source("CRANtoR_function.R")
install.packages("pacman")
pacman::p_load(tidyverse,stringi,stringr,anytime)
source("CRANtoR_function.R")
setwd('.')
source("CRANtoR_function.R")
source("CRANtoR_function.R")
install.packages("pacman")
pacman::p_load(tidyverse,stringi,stringr,anytime)
?list.files
?list.files
install.packages("pacman")
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
install.packages("pacman")
install.packages("pacman")
View(read.CLAN.file)
source("CRANtoR_function.R")
setwd('.')
source("CRANtoR_function.R")
list.files()
list.files()
path="data",full.names=T
list.files(path="data",full.names=T)
list.files(path="data")
list.files(path="data",full.names=T)
source("CRANtoR_function.R")
files <- list.files(path="data",full.names=T)
files
?map_df
map_df(files, function(x) print (x))
map_df(files, function(x) print(x))
map_df(files, function(x) data.frame(x))
map_df(files, function(x) data.frame(x))
map_df(files, function(x) read.CLAN.file(x))
df<- map_df(files, function(x) read.CLAN.file(x))
map_df(files, function(x) read.CLAN.file(x))
install.packages("pacman")
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
install.packages("pacman")
source("CRANtoR_function.R")
map_df(files, function(x) read.CLAN.file(x))
library(purrr)
map_df(files, function(x) read.CLAN.file(x))
df <- files %>%
map_df(function(x) read.CLAN.file(x))
source("CRANtoR_function.R")
view(df)
df %>%
df %>%
view()
View(df)
library(anytime)
library(stringi)
library(stringr)
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
df %>%
view()
select_df <- df %>%
select(gloss=Gloss, speaker=Speaker, date=Date)
select_df <- df %>%
select(gloss=Gloss, speaker=Speaker, date=Date)
select_df
view()
view(select_df)
select_df <- df %>%
select(speaker=Speaker, gloss=Gloss, date=Date)
view(select_df)
selcet?
?write.csv()
?write.csv
select_df %>%
write.csv("select_df.csv")
read.csv("select_df.csv")
view.csv("select_df.csv")
read.csv("select_df.csv")
source("CRANtoR_function.R")
install.packages("pacman")
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
install.packages("pacman")
library(tidyverse,stringi,stringr,anytime,plyr,dplyr)
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
library(tidyverse,stringi,stringr,anytime,plyr,dplyr)
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
library(tidyverse,stringi,stringr,anytime,plyr,dplyr)
library(pacman)
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
library(tidyverse,stringi,stringr,anytime,plyr,dplyr)
?library
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
library(tidyverse,stringi,stringr,anytime,plyr,dplyr)
pacman::p_load(tidyverse,stringi,stringr,anytime,plyr,dplyr)
setwd('.')
setwd('.')
source("CRANtoR_function.R")
files <- list.files(path="data",full.names=T)
files
df <- files %>%
map_df(function(x) read.CLAN.file(x))
select_df %>%
write.csv("select_df.csv")
select_df %>%
write.csv("select_df.csv")
df_csv <- read_csv("select_df.csv")
df_csv %>%
str
df_csv %>%
str()
view(df_csv)
df_csv %>%
class()
df_csv %>%
str()
view(df_csv)
df_csv %>%
mutate(
speaker=as.factor(speaker),
gloss=as.character(gloss),
date=anytime::anydate(date)) %>%
view()
df_as<- df_csv %>%
mutate(
speaker=as.factor(speaker),
gloss=as.character(gloss),
date=anytime::anydate(date)) %>%
view(
df_as <- df_csv %>%
mutate(
speaker=as.factor(speaker),
gloss=as.character(gloss),
date=anytime::anydate(date)) %>%
view(
df_as<-df_csv %>%
mutate(
speaker=as.factor(speaker),
gloss=as.character(gloss),
date=anytime::anydate(date))
summary(df_as)
summary(df_as)
df_as<-df_csv %>%
mutate(
speaker=as.factor(speaker),
gloss=as.character(gloss),
date=anytime::anydate(date))
summary(df_csv)
summary(df_as)
summary(df_as)
summary(df_csv)
filter_MOMCHI_df <- df %>%
filter(
speaker=="CHI"|speaker=="MOT")
filter_MOMCHI_df <- df %>%
filter(
speaker=="CHI"|speaker=="MOT")
filter_MOMCHI_df <- df %>%
filter(speaker=="CHI"|speaker=="MOT")
filter_MOMCHI_df <- df %>%
filter(speaker=="CHI"|speaker=="MOT")
filter_MOMCHI_df <- df %>%
filter(speaker == "CHI"| speaker == "MOT")
df %>%
filter(speaker == "CHI"| speaker == "MOT")
filter_df<- df_as %>%
filter(speaker == "CHI"| speaker == "MOT")
?str_replace_all()
?mutate
?mutate()
fliter_df<- filter_df %>%
mutate(
clean=str_replace_all(gloss,"[:punct:]"))
fliter_df<- filter_df %>%
mutate(
clean = str_replace_all(gloss,"[:punct:]"))
fliter_df<- filter_df %>%
mutate(
clean = str_replace_all(gloss,"[:punct:]",""))
view(filter_df)
fliter_df<- filter_df %>%
mutate(
clean = str_replace_all(gloss,"[:punct:]",""))
view(filter_df)
filter_df<- filter_df %>%
mutate(
clean = str_replace_all(gloss,"[:punct:]",""))
view(filter_df)
?stri_count_word()
?stri_count_word
??stri_count_word
view(filter_df)
filter_df <- filter_df %>%
mutate(count_words=stri_count_words(clean))
view(filter_df)
filter_df %>%
group_by(speaker) %>%
mean(word_count)
filter_df %>%
group_by(speaker) %>%
summarise(mean(word_count))
filter_df %>%
group_by(speaker,date) %>%
summarise(mean_words=mean(word_count))
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(mean_words=mean(word_count))
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(mean_words=mean(word_count))
?summarise
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarize(mean_words=mean(word_count))
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(mean_words=mean(count_words), utterances=n())
grouped_df <- filter_df %>%
group_by(speaker) %>%
summarise(mean_words=mean(count_words), utterances=n())
grouped_df <- filter_df %>%
group_by(speaker) %>%
summarise(mean_words=mean(count_words), utterances=n())
view(grouped_df)
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(mean_words=mean(count_words), utterances=n())
view(grouped_df)
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(
sum_words=sum(count_words),
utterances=n()),
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(
sum_words=sum(count_words),
utterances=n()),
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(
sum_words=sum(count_words),
utterances=n(),
mean_words=mean(count_words))
view(grouped_df)
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(
sum_words=sum(count_words),
utterances=n(),
mlu=sum_words/utterances,
mean_words=mean(count_words))
view(grouped_df)
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(
sum_words=sum(count_words),
utterances=n(),
meanlengthutterances=sum_words/utterances,
mean_words=mean(count_words))
view(grouped_df)
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(
sum_words=sum(count_words),
utterances=n(),
meanlengthutterances =sum_words/utterances,
mean_words=mean(count_words))
view(grouped_df)
grouped_df <- filter_df %>%
group_by(speaker,date) %>%
summarise(
sum_words=sum(count_words),
utterances=n(),
MLU =sum_words/utterances,
mean_words=mean(count_words))
view(grouped_df)
write.csv(grouped_df)
write_csv(grouped_df,"MLU_df.csv")
pacman::pload(tidyverse)
pacman::pload(tidyverse)
pacman::p_load(tidyverse)
mlu_df <- read_csv("MLU_df.csv")
str(mlu_df)
str(mlu_df)
mlu_df<- mlu_df %>%
mutate(
speaker=as.factor(speaker),
date=anytime::anydate(date),
sum_words=as.interger(sum_words),
utterances=as.interger(utterances),
MLU=as.interger(MLU),
mean_words=as.integer(mean_words)
)
str(mlu_df)
mlu_df<- mlu_df %>%
mutate(
speaker=as.factor(speaker),
date=anytime::anydate(date),
sum_words=as.interger(sum_words),
utterances=as.interger(utterances),
MLU=as.interger(MLU),
mean_words=as.integer(mean_words)
)
str(mlu_df)
mlu_df<- mlu_df %>%
mutate(
speaker=as.factor(speaker),
date=anytime::anydate(date),
sum_words=as.integer(sum_words),
utterances=as.integer(utterances),
MLU=as.integer(MLU),
mean_words=as.integer(mean_words)
)
plot <- mlu_df %>%
ggplot()+
aes(x=date,y=MLU)
plot <- mlu_df %>%
ggplot()+
aes(x=date,y=MLU)+
geom_point()
plot <- mlu_df %>%
ggplot()+
aes(x=date,y=MLU)+
geom_point()
plot
mlu_df %>%
ggplot()+
aes(x=date,y=MLU)+
geom_point()
mlu_df %>%
ggplot()+
aes(x=date,y=MLU,color=speaker)+
geom_point()
plot<- mlu_df %>%
ggplot()+
aes(x=date,y=MLU,color=speaker)+
geom_point()
plot<- mlu_df %>%
ggplot()+
aes(x=date,y=MLU,color=speaker)+
geom_point()
plot
view(mlu_df)
mlu_df<- mlu_df %>%
mutate(
speaker=as.factor(speaker),
date=anytime::anydate(date),
sum_words=as.integer(sum_words),
utterances=as.integer(utterances),
MLU=as.integer(MLU),
mean_words=as.integer(mean_words)
)
str(mlu_df)
mlu_df<- mlu_df %>%
mutate(
speaker=as.factor(speaker),
date=anytime::anydate(date),
sum_words=as.integer(sum_words),
utterances=as.integer(utterances),
MLU=as.integer(MLU),
mean_words=as.integer(mean_words)
)
view(mlu_df)
mlu_df <- read_csv("MLU_df.csv")
view(mlu_df)
str(mlu_df)
mlu_df2<- mlu_df %>%
mutate(
speaker=as.factor(speaker),
date=anytime::anydate(date),
sum_words=as.integer(sum_words),
utterances=as.integer(utterances),
MLU=as.numeric(MLU),
mean_words=as.numeric(mean_words)
)
view(mlu_df2)
plot<- mlu_df2 %>%
ggplot()+
aes(x=date,y=MLU,color=speaker)+
geom_point()
plot
str(mlu_df)
mlu_df2<- mlu_df %>%
mutate(
speaker=as.factor(speaker),
date=anytime::anydate(date),
sum_words=as.integer(sum_words),
utterances=as.integer(utterances),
MLU=as.numeric(MLU),
mean_words=as.numeric(mean_words)
)
view(mlu_df2)
plot<- mlu_df2 %>%
ggplot()+
aes(x=date,y=MLU)+
geom_point()
plot
plot2<- mlu_df2 %>%
ggplot()+
aes(x=date,y=MLU,color=speaker)+
geom_point()
plot2
plot3<- mlu_df2 %>%
ggplot()+
aes(x=date,y=MLU,color=speaker)+
geom_point()+
geom_smooth()
plot3

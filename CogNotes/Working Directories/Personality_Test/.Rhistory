install.packages("tidyverse")
library(tidyverse)
df <- read.csv("personality_data_cleaned_2021.csv")
view(df)
sumarise(gender=n(female)
#1.2.2 - How many people of each gender is able to touch the floor
df %>%
df %>%
df <- read.csv("personality_data_cleaned_2021.csv")
df <- read.csv("personality_data_cleaned_2021.csv")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
df <- read.csv("personality_data_cleaned_2021.csv")
library(tidyverse)
df <- read.csv("personality_data_cleaned_2021.csv")
library(tidyverse)
library(tidyverse)
library(dbplyr)
detach("package:dbplyr", unload = TRUE)
#Personality Test for CogSci 2021
setwd("C:/Users/lauri/Desktop/CogNotes/Working Directories/Personality_Test")
df <- read.csv("personality_data_cleaned_2021.c'sv")
df <- read.csv("personality_data_cleaned_2021.csv")
view(df)
df
#5.3 Does handedness influence tongue twisting speed?
df %>%
group_by(handedness) %>%
summarize(tongue_twist=mean(tongue_twist)) %>%
view
#5.3 Does handedness influence tongue twisting speed?
df %>%
group_by(handedness) %>%
summarize(tongue_twist=mean(tongue_twist)) %>%
view
#5.3.1 Add a column to the summary which contains number of people in each group
#(e.g. number of right handed people). Hint: look at the n()-function
df %>%
#5.3.1 Add a column to the summary which contains number of people in each group
#(e.g. number of right handed people). Hint: look at the n()-function
df %>%
group_by(gender) %>%
summarise(gender_count=n())
#5.3.1 Add a column to the summary which contains number of people in each group
#(e.g. number of right handed people). Hint: look at the n()-function
df %>%
group_by(gender) %>%
summarise(gender_count=n())
df %>%
filter(touch_floor=="Yes"|touch_floor=="Yes of course") %>%
group_by(gender) %>%
summarise(gender_count=n())
#5.3.1 Add a column to the summary which contains number of people in each group
#(e.g. number of right handed people). Hint: look at the n()-function
df %>%
group_by(handedness) %>%
summarise(handedness_count=n())
#5.3.1 Add a column to the summary which contains number of people in each group
#(e.g. number of right handed people). Hint: look at the n()-function
df %>%
group_by(handedness) %>%
summarise(handedness_count=n()) %>%
view
#5.3.1 Add a column to the summary which contains number of people in each group
#(e.g. number of right handed people). Hint: look at the n()-function
df %>%
group_by(handedness) %>%
summarise(handedness_count=n()) %>%
view
df %>%
filter(touch_floor=="Yes"|touch_floor=="Yes of course") %>%
group_by(gender) %>%
summarise(gender_count=n())
install.packages("tidyverse")
#Personality Test for CogSci 2021
setwd("C:/Users/lauri/Desktop/CogNotes/Working Directories/Personality_Test")
library(tidyverse)
df <- read.csv("personality_data_cleaned_2021.csv")
view(df)
df %>%
filter(touch_floor=="Yes"|touch_floor=="Yes of course") %>%
group_by(gender) %>%
summarise(gender_count=n())
#5.2. Is there a relation between sound level preference and which cola was chosen?
#mean(x,na.rm = TRUE), used to ignore NA cases
df %>%
group_by(taste_cola) %>%
summarize(sound_level_pref=mean(sound_level_pref,na.rm = TRUE))
#5.2. Is there a relation between sound level preference and which cola was chosen?
#mean(x,na.rm = TRUE), used to ignore NA cases
df %>%
group_by(taste_cola) %>%
summarize(sound_level_pref=mean(sound_level_pref))
#5.2. Is there a relation between sound level preference and which cola was chosen?
#mean(x,na.rm = TRUE), used to ignore NA cases
df %>%
group_by(taste_cola) %>%
summarize(sound_level_pref=mean(sound_level_pref,na.rm = TRUE))
#5.3.1 Add a column to the summary which contains number of people in each group
#(e.g. number of right handed people). Hint: look at the n()-function
df %>%
group_by(handedness) %>%
summarise(handedness_count=n()) %>%
view
sound_level_pr
#5.2. Is there a relation between sound level preference and which cola was chosen?
#mean(x,na.rm = TRUE), used to ignore NA cases
df %>%
group_by(taste_cola) %>%
summarize(sound_level_pref=mean(sound_level_pref,na.rm = TRUE))
load("C:/Users/lauri/Desktop/CogNotes/Working Directories/Personality_Test/.RData")
library(tidyverse)
df <- read.csv("personality_data_cleaned_2021.csv")
#Command 1: find default chunk options (opts_chunk), and set the setting echo (whether to show your code) to TRUE
knitr::opts_chunk$set(echo = TRUE)
#Command 2: set a new working directory to ALL chunks - not just the current chunk
#You need to remove the # for it to work
knitr::opts_knit$set(root.dir = '.')
install.packages("pacman")
pacman::p_load(tidyverse)
install.packages("pacman")
install.packages("pacman")
View(df)
#Command 1: find default chunk options (opts_chunk), and set the setting echo (whether to show your code) to TRUE
knitr::opts_chunk$set(echo = TRUE)
#Command 2: set a new working directory to ALL chunks - not just the current chunk
#You need to remove the # for it to work
knitr::opts_knit$set(root.dir = '.')
install.packages("pacman")
pacman::p_load(tidyverse)
install.packages("pacman")
#Command 1: find default chunk options (opts_chunk), and set the setting echo (whether to show your code) to TRUE
knitr::opts_chunk$set(echo = TRUE)
#Command 2: set a new working directory to ALL chunks - not just the current chunk
#You need to remove the # for it to work
knitr::opts_knit$set(root.dir = '.')
getwd()
install.packages("pacman")
pacman::p_load(tidyverse)
read.csv(personality_data_cleaned_2021.csv)
install.packages("pacman")
read.csv("personality_data_cleaned_2021.csv")
install.packages("pacman")
pacman::p_load(tidyverse)
df <- read.csv("personality_data_cleaned_2021.csv")
install.packages("pacman")
class("balloon_balance")
class(df$balloon_balance)
#5.3 Does handedness influence tongue twisting speed?
df %>%
group_by(handedness) %>%
summarize(tongue_twist=mean(tongue_twist)) %>%
view
install.packages("pacman")
pacman::p_load(tidyverse)
df <- read.csv("personality_data_cleaned_2021.csv")
install.packages("pacman")
#Command 1: find default chunk options (opts_chunk), and set the setting echo (whether to show your code) to TRUE
knitr::opts_chunk$set(echo = TRUE)
#Command 2: set a new working directory to ALL chunks - not just the current chunk
#You need to remove the # for it to work
knitr::opts_knit$set(root.dir = '.')
pacman::p_load(tidyverse)
df <- read.csv("personality_data_cleaned_2021.csv")
#Make a summary with just one value - the average shoesize
df %>%
summarise(mean(shoesize))
#Make a summary with just one value - the average shoesize
df %>%
summarise(mean(shoesize))
#summary with several values: the average shoesize and its standard deviation
df %>%
summarise(df,mean(shoesize),median(shoesize),sd(shoesize))
#Make a summary with just one value - the average shoesize
df %>%
summarise(mean(shoesize))
#summary with several values: the average shoesize and its standard deviation
df %>%
summarise(mean(shoesize),median(shoesize),sd(shoesize))
#Histogram
df %>%
hist()
#Histogram
df$shoesize %>%
hist()
#Make a summary with just one value - the average shoesize
df %>%
summarise(mean(shoesize))
#summary with several values: the average shoesize and its standard deviation
df %>%
summarise(mean(shoesize),median(shoesize),sd(shoesize))
#Histogram
df$shoesize %>%
hist()
#group data by gender
grouped_bygender <- group_by(df, gender)
#group data by native language
grouped_bylanguage <- group_by(df, native_Danish)
summarise(grouped_bygender, mean(breath_hold))
summarise(grouped_bygender, mean(breathhold))
summarise(grouped_bylanguage, mean(tongue_twist), sd(tongue_twist))
grouped_data <- group_by(df, gender)
summary_shoe_bygender <- summarise(grouped_data, mean(shoesize))
#call the variable to see the summary output
summary_shoe_bygender
summary_shoe_bygender2 <- df %>%  #send the df to the next line:
group_by(gender) %>% #group the data from the previous line by gender and send the result to the next line:
summarise(mean(shoesize)) #summarise mean shoesize for data from the previous line
summary_shoe_bygender2
df %>%
group_by(gender) %>%
summary(balloon_balance)
df %>%
group_by(gender) %>%
summary(balloon_balance) %>%
filter("gender","balloon_balance")
df %>%
group_by(gender) %>%
summary(balloon_balance) %>%
filter("gender","balloon_balance")
df %>%
group_by(gender) %>%
summary(balloon_balance) %>%
filter(gender,balloon_balance)
df %>%
group_by(gender) %>%
summary(balloon_balance) %>%
select(c("name","balloon_balance"))
df %>%
group_by(gender) %>%
summary(balloon_balance) %>%
select(c("gender","balloon_balance"))
df %>%
group_by(gender) %>%
summary(balloon_balance) %>%
view
df %>%
group_by(gender) %>%
summary(balloon_balance) %>%
view()
df %>%
group_by(gender) %>%
summary(mean(balloon_balance)) %>%
df %>%
group_by(gender) %>%
summarise(mean(balloon_balance))
df %>%
group_by(taste_cola) %>%
summarize(sound_level_pref=mean(sound_level_pref,na.rm = TRUE))
df %>%
group_by(balloon_balance) %>%
summarise(mean(gender))
df %>%
group_by(gender) %>%
summarise(mean(balloon_balance))
df %>%
group_by(taste_cola) %>%
filter(!is.na(sound_level_pref)) %>%
summarize(sound_level_pref=mean(sound_level_pref))
df %>%
group_by(handedness) %>%
summarise(mean(tongue_twist))
df %>%
group_by(handedness) %>%
summarise(mean(tongue_twist),handedness=n)
df %>%
group_by(handedness) %>%
summarise(mean(tongue_twist),handedness_count=n)
df %>%
group_by(handedness) %>%
summarise(mean(tongue_twist),handedness_count=n())
df %>%
group_by(handedness) %>%
summarise(handedness_count=n(), mean(tongue_twist))
df %>%
group_by(handedness) %>%
summarise(handedness_count=n(), mean_tounge_twist_speed=mean(tongue_twist))
df %>%
filter(touch_floor=="Yes"|touch_floor=="Yes of course") %>%
group_by(gender) %>%
summarise(gender_count=n())
df %>%
filter(touch_floor=="Yes"|touch_floor=="Yes of course") %>%
group_by(gender) %>%
summarise(gender_count=n())
df %>%
group_by(handedness) %>%
summarise(handedness_count=n()) %>%
summarise(mean_tounge_twist_speed=mean(tongue_twist))
df %>%
summarise(handedness_count=n(), mean_tounge_twist_speed=mean(tongue_twist))
df %>%
group_by(handedness) %>%
summarise(handedness_count=n(), mean_tounge_twist_speed=mean(tongue_twist))
plot(pressure)
plot(pressure)
ggplot(df) # the most basic setup
ggplot(df) # the most basic setup
#Examples of setups with different aesthetics:
ggplot(df, aes(x=gender)) # if only X-axis is known. The Y-axis can be specified later
ggplot(df, aes(x=gender, y=balloon)) # if both X and Y axes are fixed for all layers.
ggplot(df, aes(x=breath_hold, color=gender))  # Each category of the 'gender' variable will now have a distinct  color, once a geom is added.
#Examples of setups with different aesthetics:
ggplot(df, aes(x=gender)) # if only X-axis is known. The Y-axis can be specified later
ggplot(df, aes(x=gender, y=balloon)) # if both X and Y axes are fixed for all layers.
ggplot(df, aes(x=breathhold, color=gender))  # Each category of the 'gender' variable will now have a distinct  color, once a geom is added.
ggplot(df, aes(x=tongue_twist))+
geom_histogram()
ggplot(df, aes(x=tongue_twist))+
geom_histogram(binwidth = 1) #you can change binwidth if you want to, it's cosmetic
ggplot(choose_rand_num(50),x=amount)+geom_histogram(1)
rnorm(50)
rnorm(50) %>%
ggplot(x=amount)+geom_histogram(1)
rnorm(50) %>%
ggplot(aes(x=amount)+geom_histogram(1)
rnorm(50) %>%
ggplot(aes(x=amount))+geom_histogram(1)
rnorm(50) %>%
ggplot(aes(x=amount))+geom_histogram(binwidth(1))
rnorm(50) %>%
ggplot(aes(x=amount))+geom_histogram(binwidth(1))
rnorm(50) %>%
ggplot(aes(x=amount))+geom_histogram()
rnorm(50)
?rnorm
rnorm(50, mean=10,sd=1)
%>%
rnorm(50, mean=10,sd=1)%>%
ggplot(aes(x=amount))+geom_histogram()
?fortify()
fortify(rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=amount))+geom_histogram()
(rnorm(50, mean=10,sd=1)%>%
ggplot(aes(x=amount))+geom_histogram()
?fortify()
(rnorm(50, mean=10,sd=1)
(rnorm(50, mean=10,sd=1)
rnorm(50, mean=10,sd=1)
rnorm(50, mean=10,sd=1)
rnorm(50, mean=10,sd=1)
%>%
rnorm(50, mean=10,sd=1) %>%
ggplot(aes(x=x,y=y))+geom_histogram()
plot_ran <- rnorm(50, mean=10,sd=1) %>%
ggplot(aes(x=x,y=y))+geom_histogram()
mtcars
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=x,y=y))+geom_histogram()
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value,y=value))+geom_histogram()
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value,y=value))+geom_histogram()
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value))+geom_histogram()
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value,y="value"))+geom_histogram()
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value))+geom_histogram()
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value))+geom_histogram()
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value))+geom_histogram()
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
fifty_num <- random_value=rnorm(50, mean=10,sd=1)
fifty_num <- rnorm(50, mean=10,sd=1)
data.frame(number=1:50, random_value=rnorm(50, mean=10,sd=1))%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
fifty_num <- rnorm(50, mean=10,sd=1)
data.frame(number=1:50, random_value=fifty_num)%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
fifty_num <- rnorm(50, mean=10,sd=1)
data.frame(number=1:50, random_value=fifty_num)%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
summarize(mean(fifty_num),median(fifty_num))
summarize(fifty_num,mean())
fifty_num <- rnorm(50, mean=10,sd=1)
data.frame(number=1:50, random_value=fifty_num)%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
summarize(fifty_num,mean())
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
summarize(fifty_num,mean())
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise()
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise()
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise(fifty_num,mean(random_value),median(random_value))
View(df_fifty)
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)
dffifty%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)
df_fifty%>%
ggplot(aes(x=random_value))+geom_histogram(fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise(fifty_num,mean(random_value),median(random_value))
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)
df_fifty%>%
ggplot(aes(x=random_value))+geom_histogram(binwidth = 0.5, fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise(fifty_num,mean(random_value),median(random_value))
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)
df_fifty%>%
ggplot(aes(x=random_value))+geom_histogram(binwidth = 0.1, fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise(fifty_num,mean(random_value),median(random_value))
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)
df_fifty%>%
ggplot(aes(x=random_value))+geom_histogram(binwidth = 0.2, fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise(fifty_num,mean(random_value),median(random_value))
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)
df_fifty%>%
ggplot(aes(x=random_value))+geom_histogram(binwidth = 0.2, fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise(mean(random_value),median(random_value))
fifty_num <- rnorm(50, mean=10,sd=1)
df_fifty<- data.frame(number=1:50, random_value=fifty_num)
df_fifty%>%
ggplot(aes(x=random_value))+geom_histogram(binwidth = 0.2, fill = "grey", color = "black")+theme_bw()
df_fifty %>%
summarise(mean(random_value),median(random_value))
# Create your plot here :))
ggplot(df, aes(x=gender))+geom_bar()
# Create your plot here :))
ggplot(df, aes(x=gender))+geom_bar(fill=grey)
# Create your plot here :))
ggplot(df, aes(x=gender))+geom_bar(fill="grey")
# Create your plot here :))
ggplot(df, aes(x=gender))+geom_bar(fill="grey", color="pink")
# Create your plot here :))
ggplot(df, aes(x=gender))+geom_bar(fill="pink", color="black")
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean) #we ask to show us the mean of values on y coordinate
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary',y = mean) #we ask to show us the mean of values on y coordinate
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean) #we ask to show us the mean of values on y coordinate
ggplot(df, aes(x=gender, y=balloon)) +
geom_bar(stat='summary', fun.y = mean) +
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean) #we ask to show us the mean of values on y coordinate
balloon_bar_plot
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean)
balloon_bar_plot
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean)
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean)
balloon_bar_plot
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean,color="black")
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean,color="black")
balloon_bar_plot
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean,color="black")+  geom_bar(stat='max', fun.y = max,color="pink")
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean,color="black")+  geom_bar(stat='summary', fun.y = max,color="pink")
balloon_bar_plot
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean,color="black")+  geom_bar(stat='summary', fun.ymax = max,color="pink")
balloon_bar_plot
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean,color="black")
balloon_bar_plot
balloon_bar_plot <- ggplot(df, aes(x=gender, y=balloon))+
geom_bar(stat='summary', fun.y = mean,color="pink")
balloon_bar_plot
ggplot(df, aes(x=gender, y=balloon)) +
geom_bar(stat='summary', fun.y = mean) +geom_errorbar(stat = 'summary', fun.data = mean_se)
ggplot(df, aes(x=gender, y=balloon, fill = gender))+
geom_bar(stat='summary', fun.y = mean, width = 0.5)+
geom_errorbar(stat = 'summary', fun.data = mean_se, width = 0.2)+
labs(x = "Gender", y = "Balloon time")+
theme_minimal()
ggplot(df, aes(x=gender, y=balloon,fill=gender)) +
geom_bar(stat='summary', fun.y = mean) +geom_errorbar(stat = 'summary', fun.data = mean_se)
ggplot(df, aes(x=gender, y=balloon, fill = gender))+
geom_bar(stat='summary', fun.y = mean, width = 0.3)+
geom_errorbar(stat = 'summary', fun.data = mean_se, width = 0.2)+
labs(x = "Gender", y = "Balloon time")+
theme_minimal()
ggplot(df, aes(x=gender, y=balloon, fill = gender))+
geom_bar(stat='summary', fun.y = mean, width = 0.5)+
geom_errorbar(stat = 'summary', fun.data = mean_se, width = 0.2)+
labs(x = "Gender", y = "Balloon time")+
theme_minimal()

# first we load packages (e.g. tidyverse)
pacman:p_load(tidyverse)
# first we load packages (e.g. tidyverse)
pacman::p_load(tidyverse)
# first we load packages (e.g. tidyverse)
pacman::p_load(tidyverse)
# import the database
read_csv("MRC_database.csv")
# import a log file from your reading experiment
read_csv("")
# import the database
read_csv("MRC_database.csv")
# import a log file from your reading experiment
read_csv("sample_logfile.csv")
# import the database
MRC_df<- read_csv("MRC_database.csv")
# import a log file from your reading experiment
LOG_df<- read_csv("sample_logfile.csv")
View(MRC_df)
# import the database
MRC_df<- read_csv("MRC_database.csv")
# import a log file from your reading experiment
LOG_df<- read_csv("sample_logfile.csv")
MRC_df
rownames(MRC_df)
View(LOG_df)
# change name of word column in logfile
LOG_df <- LOG_df %>%
rename(word = word_LOG)
# change name of word column in logfile
LOG_df <- LOG_df %>%
rename(word_LOG = word)
View(LOG_df)
# convert word column to uppercase
LOG_df <- LOG_df %>%
mutate(uppercase_word = str_to_upper(word_LOG))
View(LOG_df)
View(LOG_df)
# convert word column to uppercase
LOG_df <- LOG_df %>%
mutate(word = str_to_upper(word_LOG))
View(LOG_df)
# import the database
MRC_df<- read_csv("MRC_database.csv")
MRC_df
# import a log file from your reading experiment
LOG_df<- read_csv("sample_logfile.csv")
# convert word column to uppercase
LOG_df <- LOG_df %>%
mutate(word = str_to_upper(word_LOG))
# convert word column to uppercase
LOG_df <- LOG_df %>%
mutate(word = str_to_upper(word))
# add word properties from the database to your reading experiment data frame
LOG_df <- LOG_df %>%
inner_join(MRC_df)
View(LOG_df)
# Notice that the dataframe is now called `nodup_df`
nodup_df <- LOG_df %>%
mutate(
var = if_else(is.na(lag(word)),
TRUE,
lag(word) != word)
) %>%
filter(var)
View(nodup_df)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(nodup_df$rt, nodup_df$nlet),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(nodup_df$rt, nodup_df$nlet,nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(nodup_df$rt, nodup_df$nlet,nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(nodup_df$rt, nodup_df$nlet, nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(Reaction_Time = nodup_df$rt,
Num_Letters = nodup_df$nlet,
Num_Syllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(Reaction_Time = nodup_df$rt,
Num_Letters = nodup_df$nlet,
Num_Syllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE,p=0.95),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(Reaction_Time = nodup_df$rt,
Num_Syllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE,p=0.95),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(Reaction_Time = nodup_df$rt,Num_Syllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE,p=0.95),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(Reaction_Time = nodup_df$rt,Num_Syllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(Reaction_Time = nodup_df$rt,Num_Syllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(Reaction_Time = nodup_df$rt,
Num_Letters = nodup_df$nlet, nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
pastecs::stat.desc(
cbind(Reaction_Time = nodup_df$rt,
"Num_Letters" = nodup_df$nlet, nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# first we load packages (e.g. tidyverse)
pacman::p_load(tidyverse)
pacman::p_load(pastecs)
# Check normality (optional)
round(
stat.desc(
cbind(
Reaction_Time = nodup_df$rt,
Num_Letters = nodup_df$nlet,
Num_syllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
stat.desc(
cbind(
ReactionTime = nodup_df$rt,
NumLetters = nodup_df$nlet,
Numsyllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
stat.desc(
cbind(
ReactionTime = nodup_df$rt,
NumLetters = nodup_df$nlet,
Numsyllabus = nodub_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)
# Check normality (optional)
round(
stat.desc(
cbind(
ReactionTime = nodup_df$rt,
NumLetters = nodup_df$nlet,
NumSyllabus = nodup_df$nsyl),
basic = FALSE, norm = TRUE, desc=FALSE),
digits = 2)

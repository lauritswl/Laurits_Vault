#Loading libraries
library(pacman)
p_load(modelr,lmerTest,ggplot2,dplyr,stringr,tidyverse,plyr,pastecs,data.table,knitr,reshape)
#Loading all the datafiles for a defined path(fill in: path = "your data's directory")
temp = list.files(path = "C:/Users/Matilde Just Sterup/Desktop/Cogsci/Instructor Classes/Week 46 - emotions/emotion_type1_and_type2/emotion_type1_and_type2/emotion_systems_data", pattern = "*.csv", full.names = T)
#Applying read.delim to all files in temp, so all files is read into R
myfiles = lapply(temp,read.delim,sep=",",header = T)
#Binding list of files to a df
EMO_df=rbindlist(myfiles)
#Loading all the datafiles for a defined path(fill in: path = "your data's directory")
temp = list.files(path = "/emotion_systems_data", pattern = "*.csv", full.names = T)
#Applying read.delim to all files in temp, so all files is read into R
myfiles = lapply(temp,read.delim,sep=",",header = T)
#Loading all the datafiles for a defined path(fill in: path = "your data's directory")
temp = list.files(path = "C:/Users/Matilde Just Sterup/Desktop/Cogsci/Instructor Classes/Week 46 - emotions/emotion_type1_and_type2/emotion_type1_and_type2/emotion_systems_data", pattern = "*.csv", full.names = T)
#Loading libraries
library(pacman)
p_load(modelr,lmerTest,ggplot2,dplyr,stringr,tidyverse,plyr,pastecs,data.table,knitr,reshape)
#Loading all the datafiles for a defined path
#fill in: path = "your data's directory"
temp = list.files(path = "C:/Users/Matilde Just Sterup/Desktop/Cogsci/Instructor Classes/Week 46 - emotions/emotion_type1_and_type2/emotion_type1_and_type2/emotion_systems_data", pattern = "*.csv", full.names = T)
#Applying read.delim to all files in temp, so all files is read into R
myfiles = lapply(temp,read.delim,sep=",",header = T)
#Binding list of files to a df
EMO_df=rbindlist(myfiles)
#Remove NAs
EMO_df=subset(EMO_df,EMO_df$rt!="NA")
#Keeping only RT's above 0 (in case something went wrong with off-sets)
EMO_df=subset(EMO_df,EMO_df$rt>0)
#Making a table showing how "emotional" each category of stimulus where judged to be (based on mean of responses, 0 = no emotion, 1 = emotion --> ideally TP1 and TP2 should be very close to 1)
#Can be used to assess whether the stimuli in the "emotional" categories (TP1 and TP2) are actually judged by the participants to contain emotion.
aggdata_1 <-aggregate(EMO_df$emotion_judge,
by=list(EMO_df$categories),
FUN=mean, na.rm=TRUE)
names(aggdata_1)<-c('Image category','% emotional')
aggdata_1
#Making a table with mean RT for each image category - eyeballing the result.
aggdata_2 <-aggregate(EMO_df$rt,
by=list(EMO_df$categories),
FUN=mean, na.rm=TRUE)
names(aggdata_2)<-c('Image category','mean RT')
aggdata_2
library (lmerTest)
#Turn the ID variable into a factor to check if there is more than one, i.e. if the script has loaded data from more than one participant/session
EMO_df$ID<-as.factor(EMO_df$ID)
#if the model is run on several participants, we choose a mixed-effects model
if (length(unique(EMO_df$ID))>1) {
emo_model=lmer(rt~categories + (1|ID),data=EMO_df)
}
# Else we choose an ordinary linear regresssion model
if (length(unique(EMO_df$ID))==1) {
emo_model=lm(rt~categories,data=EMO_df)
}
summary(emo_model)
#histogram
hist(EMO_df$rt,breaks=10)
#Q-Q-plot
qqnorm(EMO_df$rt)
#make a log-transformation
EMO_df$logrt=log(EMO_df$rt)
#histogram
hist(EMO_df$logrt,breaks=10)
#Q-Q-plot
qqnorm(EMO_df$logrt)
## a side note on assumptions:
#One can argue whether this variable (logrt) should be used instead of the regular RT. How much do you know about assumptions?
#In addition: Assumption of independence is also violated (because the experiment uses repeated measures) - we can take this into account using a mixed effects model (lmer) instead of a linear model (lm), as you may have learned/will learn in methods:
emo_model2 = lmerTest::lmer(rt~categories+(1|ID),EMO_df)
summary(emo_model2)
#note: This will only run if you have data from multiple participants
#It is perfectly fine for now and for the purpose of this class to just use lm (to avoid confusion).
emo_model2 = lmerTest::lmer(logrt~categories+(1|ID),EMO_df)
summary(emo_model2)
ggplot(EMO_df, aes(x = categories , y = rt)) +
geom_boxplot() + labs(x = "Image Category", y = "Response time")
b=ggplot(EMO_df,aes(categories,rt))
b+geom_bar(stat = "summary",fun.y=mean, fill="gold1")+
labs(x= "Image Category", y="Response Time",title="Response Time for Emotional Stimuli")
